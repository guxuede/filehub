<?xml version="1.0" encoding="UTF-8"?>
<!-- Use this definition if using a Java EE 6 container This also stops Eclipse 
	from complaining that 3.0 is not a valid version <web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" 
	http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"> -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
 	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:applicationContext*.xml</param-value>
	</context-param>
	
	<!-- 解决延迟加载时EntityManager已经关闭而无法使用的问题，但是性能损耗(要放在FilterDispatcher前面) -->  
	<filter>  
	    <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>  
	    <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>  
	</filter>  
	<filter-mapping>  
	    <filter-name>Spring OpenEntityManagerInViewFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>  
	
	<filter>  
	      <filter-name>springSecurityFilterChain</filter-name>  
	      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
	</filter>
	<filter-mapping>  
		<filter-name>springSecurityFilterChain</filter-name>  
		<url-pattern>/*</url-pattern>  
	</filter-mapping>
	
	<filter>
		<filter-name>site_mesh</filter-name>
		<filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>site_mesh</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>INCLUDE</dispatcher> 
		<dispatcher>FORWARD</dispatcher> 
		<dispatcher>REQUEST</dispatcher>  
	</filter-mapping>
	
	<filter> 
		<filter-name>Spring character encoding filter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param> 
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param> 
	</filter> 
	<filter-mapping> 
		<filter-name>Spring character encoding filter</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping>
	
	<filter>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>  
	</filter>  
	<filter-mapping>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <url-pattern>/*</url-pattern> 
	</filter-mapping>

	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	    <!-- Spring刷新Interceptor防止内存泄漏  -->
    <listener>
     <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
<!-- 
	<servlet>
		<servlet-name>socket</servlet-name>
		<servlet-class>com.guxuede.myca.socket.ChatWebSocketServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>socket</servlet-name>
		<url-pattern>*.sk</url-pattern>
	</servlet-mapping>
	 -->
</web-app>